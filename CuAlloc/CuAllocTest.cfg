SYMBOLS {
__LOADADDR__:  type = import;
__EXEHDR__:    type = import;
__STACKSIZE__: type = weak,   value = $0100;
}

MEMORY {
	ZP:       file = "", define = yes, start = $0002, size = $001A;
	LORAM: start = $0340, size = $04c0, fill=no;
	LOADADDR: file = %O,               start = $07FF, size = $0002;
	HEADER:   file = %O,               start = $0801, size = $000C;
	RAM:      file = %O, define = yes, start = $080D, size = $C7F3 - __STACKSIZE__;
	HIRAM:  start = $e000, size = $2000, define=yes, fill=no;
}

SEGMENTS {
	ZEROPAGE: load = ZP, type = zp, define = yes;
	LOADADDR: load = LOADADDR, type = ro;
	EXEHDR:   load = HEADER,   type = ro;
	STARTUP: load = RAM, type = ro;
	ZPSAVE: load = RAM, type = rw;
	INIT:   load = RAM, type = ro, define = yes, optional = yes;
	BEGIN: load = RAM, type = ro, define = yes, optional = yes;
	RODATA: load = RAM, type = ro, define = yes;
	CODE:   load = RAM, type = ro;
	DATA:   load = RAM, type = ro, define = yes;
	END: load = RAM, type = ro, define = yes, optional = yes;
	BSS:    load = RAM, type = bss, define = yes;
	HEAP: load = RAM,type = bss, define=yes, optional=yes;
}

FEATURES {
	CONDES: segment = INIT,
	type    = constructor,
	label   = __CONSTRUCTOR_TABLE__,
	count   = __CONSTRUCTOR_COUNT__;
	CONDES: segment = RODATA,
	type    = destructor,
	label   = __DESTRUCTOR_TABLE__,
	count   = __DESTRUCTOR_COUNT__;
	CONDES: segment = RODATA,
	type    = interruptor,
	label   = __INTERRUPTOR_TABLE__,
	count   = __INTERRUPTOR_COUNT__;
}



